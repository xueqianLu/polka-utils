version: "3.8"

# NOTE:
# - Demonstration setup with 4 placeholder Polkadot/Substrate nodes (node1..node4). Replace commands with real validator/node configuration.
# - Utility services:
#   1) tx-sender: run sendtx.js to push transactions at a configured rate
#   2) delayed-collector: after a delay, execute collect.js to aggregate validator block counts and write results
# - Collected output directory: ./data/collector

services:
  node1:
    image: parity/polkadot:latest
    container_name: node1
    command: >-
      --dev
      --ws-external
      --rpc-external
      --rpc-cors all
      --name node1
      --validator
    ports:
      - "9944:9944"    # WS / RPC
      - "30333:30333"  # P2P
    networks:
      - polkanet

  node2:
    image: parity/polkadot:latest
    container_name: node2
    command: >-
      --dev
      --ws-external
      --rpc-external
      --rpc-cors all
      --name node2
      --validator
    networks:
      - polkanet

  node3:
    image: parity/polkadot:latest
    container_name: node3
    command: >-
      --dev
      --ws-external
      --rpc-external
      --rpc-cors all
      --name node3
      --validator
    networks:
      - polkanet

  node4:
    image: parity/polkadot:latest
    container_name: node4
    command: >-
      --dev
      --ws-external
      --rpc-external
      --rpc-cors all
      --name node4
      --validator
    networks:
      - polkanet

  polka-utils-base:
    build: .
    image: polka-utils:latest
    profiles: ["dont-start"] # Reference-only; not auto-started

  tx-sender:
    image: polka-utils:latest
    container_name: tx-sender
    depends_on:
      - node1
      - node2
      - node3
      - node4
    environment:
      WS_ENDPOINT: ws://node1:9944     # WebSocket RPC endpoint
      SEED: //Alice                   # Sender seed (replace for real usage)
      TO: 15GrwVWcXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX # Replace with a valid destination address
      TPS: 5                          # Transactions per second
      DURATION: 3600                  # Duration in seconds (1h)
      AMOUNT: "1000000000000"        # Transfer amount (Planck)
      CONCURRENCY: 100                # Concurrency limit
      NONCE_AUTO: "true"             # Maintain local nonce
    entrypoint: ["/bin/sh", "-c", "./run-sendtx.sh"]
    networks:
      - polkanet
    restart: unless-stopped

  delayed-collector:
    image: polka-utils:latest
    container_name: delayed-collector
    depends_on:
      - node1
      - node2
      - node3
      - node4
    environment:
      DELAY_SECONDS: 18000            # 5 hours (5 * 3600)
      WS_ENDPOINT: ws://node1:9944    # WebSocket RPC endpoint
      START_BLOCK: 1                  # Starting block (adjust or use dynamic modes via script)
      OUTPUT_FORMAT: json             # table | json | csv
      RESULT_DIR: /data/collector     # Output directory in container
      BATCH_SIZE: 100                 # Batch query size
      SORT_BY: blocks                 # Sort mode: blocks | validator
      MIN_BLOCKS: 0                   # Minimum block count filter
      INCLUDE_EMPTY: "false"         # Include zero-block validators
      VERBOSE: "false"               # Verbose logging
    volumes:
      - ./data/collector:/data/collector
    entrypoint: ["/bin/sh", "-c", "./scripts/run-collector.sh"]
    networks:
      - polkanet
    restart: "no"

networks:
  polkanet:
    name: polkanet
